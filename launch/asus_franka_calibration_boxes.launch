<launch>
			<include file="$(find franka_visualization)/launch/franka_visualization_for_calibration.launch" /> 
			<include file="$(find aruco_ros)/launch/camera1.launch" /> 
			<include file="$(find aruco_ros)/launch/camera2.launch" /> 
			<include file="$(find realsense2_camera)/launch/rs_multiple_devices.launch" /> 

<group ns="camera_1">
	<arg name="calibration_name" default="camera_1_calib"/>
	<arg name="use_left_arm" default="false"/>
	<arg name="asus" default="asus1"/>

	<!-- ASUS TOPICS -->
	<!-- launch the ar tracker, units in cm, adjust at will -->
<!-- 	<arg name="marker_size" default="10" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />

	<arg name="cam_image_topic" default="/camera1/depth/color/points" />
	<arg name="cam_info_topic" default="/camera1/color/camera_info" />
	<arg name="output_frame" default="/camera1_depth_optical_frame" />

	<node name="ar_track_alvar_1" pkg="ar_track_alvar" type="individualMarkers" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />
 -->
	<!-- launch the rgbd sensor, in this case using openni2 for the asus -->
<!-- 	<include file="$(find openni2_launch)/launch/openni2.launch">
		<arg name="depth_registration" value="true" />
		<arg name="color_depth_synchronization" value="true" />
		<arg name="device_id" value="#1" />
		<arg name="camera" value="camera1" />
		<arg name="rgb_camera_info_url" value="file://$(find calibration)/config/intrinsics/rgb_$(arg asus).yaml"/>
		<arg name="depth_camera_info_url" value="file://$(find calibration)/config/intrinsics/depth_$(arg asus).yaml"/>
	</include>
 -->
	<!-- LOAD ROBOT AND CALIBRATION SETUP -->

	<!-- depends on your configuration, this is for vito 
	<group if="$(arg use_left_arm)">
		<include file="$(find vito_description)/launch/display_for_calibration.launch">
		    <arg name="left_arm_enabled" default="true"/>
   			<arg name="right_arm_enabled" default="false"/>
		</include>
			<param name="frame_id" value="camera_rgb_optical_frame" />
			<param name="ar_marker_frame" value="ar_marker_20" />
			<param name="child_frame_id" value="vito_anchor" />
			<param name="calibrator_frame" value="calibrator_20"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="right_arm_asus_calibrator" pkg="calibration" type="simple_calibrator" respawn="true" output="screen"/>
	</group>

	<group unless="$(arg use_left_arm)">
		<include file="$(find vito_description)/launch/display_for_calibration.launch">
		    <arg name="left_arm_enabled" default="false"/>
   			<arg name="right_arm_enabled" default="true"/>
		</include>
			<param name="frame_id" value="camera_rgb_optical_frame" />
			<param name="ar_marker_frame" value="ar_marker_10" />
			<param name="child_frame_id" value="right_arm_base_link" />
			<param name="calibrator_frame" value="calibrator_10"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="left_arm_asus_calibrator" pkg="calibration" type="average_calibrator" respawn="true" output="screen"/>
	</group> -->
			<param name="frame_id" value="camera1_color_optical_frame" />
			<!-- <param name="ar_marker_frame" value="ar_track_alvar_1" /> -->
			<param name="ar_marker_frame" value="aruco_marker_frame_camera_1" />
			<param name="child_frame_id" value="panda_link0" />
			<param name="calibrator_frame" value="calibrator_10"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="left_arm_asus_calibrator" pkg="calibration" type="average_calibrator" respawn="true" output="screen"/>

</group>

<!-- 	<arg name="marker_size" default="10" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />

	<arg name="cam_image_topic" default="/camera2/depth/color/points" />
	<arg name="cam_info_topic" default="/camera2/color/camera_info" />
	<arg name="output_frame" default="/camera2_depth_optical_frame" />

	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkers" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />
 -->

<group ns="camera_2">
	<arg name="calibration_name" default="camera_2_calib"/>
	<arg name="use_left_arm" default="false"/>
	<arg name="asus" default="asus1"/>

	<!-- ASUS TOPICS -->
	<!-- launch the ar tracker, units in cm, adjust at will -->
<!-- 	<arg name="marker_size" default="10" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />

	<arg name="cam_image_topic" default="/camera2/depth/color/points" />
	<arg name="cam_info_topic" default="/camera2/color/camera_info" />
	<arg name="output_frame" default="/camera2_depth_optical_frame" />

	<node name="ar_track_alvar_2" pkg="ar_track_alvar" type="individualMarkers" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />
 -->
	<!-- launch the rgbd sensor, in this case using openni2 for the asus -->
<!-- 	<include file="$(find openni2_launch)/launch/openni2.launch">
		<arg name="depth_registration" value="true" />
		<arg name="color_depth_synchronization" value="true" />
		<arg name="device_id" value="#2" />
				<arg name="camera" value="camera2" />
		<arg name="rgb_camera_info_url" value="file://$(find calibration)/config/intrinsics/rgb_$(arg asus).yaml"/>
		<arg name="depth_camera_info_url" value="file://$(find calibration)/config/intrinsics/depth_$(arg asus).yaml"/>
	</include>
 -->
	<!-- LOAD ROBOT AND CALIBRATION SETUP -->

	<!-- depends on your configuration, this is for vito 
	<group if="$(arg use_left_arm)">
		<include file="$(find vito_description)/launch/display_for_calibration.launch">
		    <arg name="left_arm_enabled" default="true"/>
   			<arg name="right_arm_enabled" default="false"/>
		</include>
			<param name="frame_id" value="camera_rgb_optical_frame" />
			<param name="ar_marker_frame" value="ar_marker_20" />
			<param name="child_frame_id" value="vito_anchor" />
			<param name="calibrator_frame" value="calibrator_20"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="right_arm_asus_calibrator" pkg="calibration" type="simple_calibrator" respawn="true" output="screen"/>
	</group>

	<group unless="$(arg use_left_arm)">
		<include file="$(find vito_description)/launch/display_for_calibration.launch">
		    <arg name="left_arm_enabled" default="false"/>
   			<arg name="right_arm_enabled" default="true"/>
		</include>
			<param name="frame_id" value="camera_rgb_optical_frame" />
			<param name="ar_marker_frame" value="ar_marker_10" />
			<param name="child_frame_id" value="right_arm_base_link" />
			<param name="calibrator_frame" value="calibrator_10"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="left_arm_asus_calibrator" pkg="calibration" type="average_calibrator" respawn="true" output="screen"/>
	</group> -->
			<param name="frame_id" value="camera2_color_optical_frame" />
			<!-- <param name="ar_marker_frame" value="ar_track_alvar_2" /> -->
						<param name="ar_marker_frame" value="aruco_marker_frame_camera_2" />
			<param name="child_frame_id" value="panda_link0" />
			<param name="calibrator_frame" value="calibrator_10"/>
			<param name="calibration_name" value="$(arg calibration_name)"/>
			<node name="left_arm_asus_calibrator" pkg="calibration" type="average_calibrator" respawn="true" output="screen"/>

</group>
</launch>
